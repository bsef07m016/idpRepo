// Generated by CoffeeScript 1.4.0
(function() {

  define(["generic_chart"], function(generic_chart) {
    var LineChart;
    LineChart = (function() {

      function LineChart(options) {
        this.chart = generic_chart.init(options);
      }

      LineChart.prototype.generateLine = function() {
        var _this = this;
        return d3.svg.line().x(function(d) {
          return _this.chart.xScale(d.x);
        }).y(function(d) {
          return _this.chart.yScale(d.y);
        });
      };

      LineChart.prototype.drawLine = function(data) {
        var line;
        line = this.generateLine();
        return this.chart.svg.append("path").datum(data).attr("class", "line").attr("d", line);
      };

      LineChart.prototype.drawDots = function(data) {
        var _this = this;
        return this.chart.svg.selectAll("dot").data(data).enter().append("circle").attr("class", "dot").attr("r", 4.5).attr("cx", function(d) {
          return _this.chart.xScale(d.x);
        }).attr("cy", function(d) {
          return _this.chart.yScale(d.y);
        }).attr("fill", "rgb(40, 100, 150)");
      };

      LineChart.prototype.draw = function() {
        var lineData, _i, _len, _ref, _results;
        this.chart.drawSvg();
        this.chart.drawAxes();
        _ref = this.chart.data;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          lineData = _ref[_i];
          this.drawLine(lineData);
          _results.push(this.drawDots(lineData));
        }
        return _results;
      };

      LineChart.prototype.redraw = function() {
        this.chart.svg = null;
        return this.draw();
      };

      return LineChart;

    })();
    return {
      init: function(options) {
        return new LineChart(options);
      }
    };
  });

}).call(this);
