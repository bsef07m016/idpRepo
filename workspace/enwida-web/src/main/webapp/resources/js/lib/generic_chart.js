// Generated by CoffeeScript 1.4.0
(function() {

  define(["scale"], function(scale) {
    var Chart;
    Chart = (function() {

      function Chart(options) {
        var default_options;
        if (!((options != null) && (options.data != null))) {
          throw "No data given";
        }
        default_options = {
          margin: {
            top: 20,
            left: 50,
            right: 20,
            bottom: 30
          },
          width: 960,
          height: 500,
          parent: "body"
        };
        this.options = $.extend(default_options, options);
        this.data = options.data;
        if (!(this.data[0] instanceof Array)) {
          this.data = [this.data];
        }
        scale.init(this);
        this.generateAxes();
      }

      Chart.prototype.generateXAxis = function() {
        return this.xAxis = d3.svg.axis().scale(this.xScale).orient("bottom");
      };

      Chart.prototype.generateYAxis = function() {
        return this.yAxis = d3.svg.axis().scale(this.yScale).orient("left");
      };

      Chart.prototype.generateAxes = function(xScale, yScale) {
        this.generateXAxis();
        return this.generateYAxis();
      };

      Chart.prototype.drawSvg = function() {
        var height, width;
        if (this.svg != null) {
          return;
        }
        width = this.options.width + this.options.margin.left + this.options.margin.right;
        height = this.options.height + this.options.margin.top + this.options.margin.bottom;
        return this.svg = d3.select(this.options.parent).append("svg").attr("width", width).attr("height", height).append("g").attr("transform", "translate(" + this.options.margin.left + "," + this.options.margin.top + ")");
      };

      Chart.prototype.drawXAxis = function(xAxis) {
        return this.svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + this.options.height + ")").call(xAxis);
      };

      Chart.prototype.drawYAxis = function(yAxis) {
        return this.svg.append("g").attr("class", "y axis").call(yAxis);
      };

      Chart.prototype.drawAxes = function() {
        this.drawXAxis(this.xAxis);
        return this.drawYAxis(this.yAxis);
      };

      return Chart;

    })();
    return {
      init: function(options) {
        return new Chart(options);
      }
    };
  });

}).call(this);
